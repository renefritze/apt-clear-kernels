#!/usr/bin/env python

import apt
import readline
from subprocess import check_output
from pprint import pprint

HEADER_STR = 'linux-headers'

class Version(object):

    def __init__(self, name):
        if 'generic' in name:
            raise KeyError()
        sub = name[len(HEADER_STR)+1:]
        lim = sub.index('-')+1
        rev = sub[lim:]
        tmp = sub[:lim-1].split('.') + [rev]
        self._version = tuple(map(int, tmp))

    def __repr__(self):
        return '.'.join(map(str, self._version))

    def __str__(self):
        return '{}.{}.{}-{}'.format(*self._version)

    def __lt__(self, other):
        return self._version < other._version

cache = apt.cache.Cache()
current_kernel = check_output(['uname', '-r'])

keep_max = 2
versions = []

for name in cache.keys():
    pkg = cache[name]
    if HEADER_STR in name and pkg.is_installed:
        try:
            versions.append(Version(name))
        except (KeyError, IndexError):
            pass

versions.sort()

to_delete = []
for i in range(len(versions)-keep_max):
    version = versions[i]
    for pref in (HEADER_STR, 'linux-image'):
        name = '{}-{}-generic'.format(pref, version)
        assert current_kernel not in name
        pkg = cache[name]
        pkg.mark_delete()
        to_delete.append(name)

pprint(to_delete)
ans = raw_input('Delete packages? [y/N]: ')
if ans == 'y':
    cache.commit()